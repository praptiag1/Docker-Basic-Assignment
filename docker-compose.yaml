services:
  web:
    # build:
    #   context: .
    #   dockerfile: Dockerfile.web
    image: praptiag11/my-web-app:v2.0
    container_name: flask-container
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_HOST: db 
      POSTGRES_PORT: 5432
      POSTGRES_DB: mydatabase
      REDIS_HOST: redis  
      REDIS_PORT: 6379
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - my-network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    # build:
    #   context: .
    #   dockerfile: Dockerfile.db
    image: praptiag11/my-db:v1.0
    container_name: db-container
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my-network
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "myuser"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    # build:
    #   context: .
    #   dockerfile: Dockerfile.cache
    image: praptiag11/my-redis:v1.0
    container_name: redis-container
    ports:
      - "6379:6379"
    networks:
      - my-network
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3

volumes:
  postgres_data:

networks:
  my-network:
    driver: bridge
